@using Common.Extensions;
@model BC.Web.Models.SearchViewModel

@section Header{
    <link rel="canonical" href="@Model.Url" />    
    <meta name="description" content="@string.Format(Resources.Resources.MetaDesc_SERP, Model.PlaceName)" />
}

@section TopBody{
    <div class="search-map-top">
        <div id="dvMap" style="width: 100%;">
        </div>
    </div>
}

<div class="search-container">
    @if (Model.BreadCrumbs.Any())
    {
        <ul class="breadcrumbs" itemprop="breadcrumb">
            @for (int i = 0; i < Model.BreadCrumbs.Count(); i++)
            {
                var crumb = Model.BreadCrumbs.ElementAt(i);
                if (i < Model.BreadCrumbs.Count() - 1)
                {
                    <li>
                        @if (!string.IsNullOrEmpty(crumb.Url))
                        { <a @Html.Raw("href=\"" + crumb.Url + "\"") title="@crumb.Name">@crumb.Name</a> <span class="divider"><i class="fa fa-chevron-right"></i></span> }
                        else
                        { @crumb.Name }
                    </li>
                }
                else
                {
                    <li class="active"><p>@crumb.Name</p></li>
                }
            }
        </ul>
                    <div class="clear"></div>
    }
    <div class="col-md-8">
        <div class="s-content-top">
            <h1>@Model.Header</h1>
            @*@Resources.Resources.ForSale*@
            <p>Visar @Model.PageStart - @Model.PageStop av <span>@Model.ProductCount</span></p>
        </div>
        <div class="start-search">
            <input type="hidden" name="placeId" id="place-hidden" data-startslug="@Resources.Resources.Url_FindHouse" data-host="@Model.Host" value="@Model.PlaceId" />
            <input type="hidden" name="sort" id="sort-hidden" value="@Model.SearchSort" />
            <input type="hidden" name="filter" id="filter-hidden" value="@Model.SearchFilter" />
            <input type="search" name="place-field" id="place-field" autocomplete="off" class="start-freetext m-left" list="result-places" placeholder="@Resources.Resources.Search_Placeholder" value="@Model.PlaceName" />
            <button class="btn btn-search btn-medium right">@Resources.Resources.Search</button>
            @*<button onclick="SearchPlace($('#place-hidden').val(),  $('#place-field').val());" class="btn btn-search btn-medium right">@Resources.Resources.Search</button>*@
        </div>
        <div class="clear"></div>
        <div class="search-sort">
            <p class="p-sort">Sortera på </p>
            <select id="ddSort" onchange="sortSearch(this.value);">
                <option value="InsertDate_desc">Nyast först</option>
                <option value="InsertDate">Äldst först</option>
                <option value="PriceFilter">Pris - Billigast först</option>
                <option value="PriceFilter_desc">Pris - Dyrast först</option>
                <option value="LivingSpace_desc">Störst först (m²)</option>
                <option value="LivingSpace">Minst först (m²)</option>
            </select>
            <div class="clear"></div>
        </div>
        <div class="serp">
            @foreach (var product in Model.Products)
            {
                <div class="s-product-item">
                    <a target="_blank" href="@product.Url">
                        <div class="s-item-img" style="background-image: url('@product.ThumbnailUrl');background-size: 100% 100%;background-repeat: no-repeat;">
                        </div>
                        <div class="s-item-content">
                            <div class="s-item-top">
                                @if (product.Price != null)
                                {
                                    <div class="c-price">
                                        <p class="s-price">@product.Price EUR</p>
                                    </div>
                                }
                                <div class="s-address">
                                    <p class="s-link">@(product.Address.Length > 23 ? product.Address.Substring(0, 20) + "..." : product.Address)</p>
                                    <p class="s-hlink">@(product.PlaceHeader.Length > 23 ? product.PlaceHeader.Substring(0, 20) + "..." : product.PlaceHeader)</p>
                                </div>
                                @if (product.LivingSpace.HasValue)
                                {
                                    <p class="s-space">@(product.LivingSpace.Value) m²</p>
                                }

                                @if (product.NumberOfRooms.HasValue)
                                {
                                    <p class="s-rooms">@(product.NumberOfRooms.Value) @Resources.Resources.Rooms</p>
                                }
                            </div>
                            <div class="s-description">
                                
                                    @if (product.Description.Length > 125)
                                    {
                                        <p>
                                            @Html.Raw(product.Description.Substring(0, 120) + "...")
                                        </p>
                                    }
                                    else
                                    {
                                        <p>
                                            @Html.Raw(product.Description)
                                        </p> 
                                    }
                            </div>
                            @if (!string.IsNullOrEmpty(product.ExternalLink))
                            {
                                <a class="btn btn-search-broker right s-goto-seller" onclick="ga('send', 'event', 'Customer@(product.CustomerId)', 'click external link', 'Go to customer from serp');" href="@product.ExternalLink" target="_blank">@Resources.Resources.Search_SellerLink</a>
                            }
                        </div>
                        <div class="clear"></div>
                    </a>
                </div>
            }
        </div>

        <div class="serp-mobile">
            @foreach (var product in Model.Products)
            {
                <div class="s-product-item-mobile">
                    <a href="@product.Url">
                        <div class="m-item-img" style="background-image: url('@product.ThumbnailUrl');background-size: 100% auto;background-repeat: no-repeat;">
                        </div>
                        <div class="s-item-content">
                            <ul class="s-item-list">
                                <li>
                                    <h2>@(product.Address.Length > 25 ? product.Address.Substring(0, 22) + "..." : product.Address)</h2>
                                </li>
                                <li>
                                    <p>@(product.PlaceHeader.Length > 30 ? product.PlaceHeader.Substring(0, 27) + "..." : product.PlaceHeader)</p>
                                </li>
                                <li>
                                    <p class="m-price">@product.Price EUR</p>
                                    @if (product.LivingSpace.HasValue)
                                    {
                                        <p class="m-space">@(product.LivingSpace.Value) m²</p>
                                    }

                                    @if (product.NumberOfRooms.HasValue)
                                    {
                                        <p class="m-rooms">@(product.NumberOfRooms.Value) @Resources.Resources.Rooms</p>
                                    }
                                </li>
                            </ul>
                        </div>
                        <div class="clear"></div>
                    </a>
                </div>
            }
        </div>
        @if (Model.ProductCount > 0)
        {
            <div class="pagination">
                <ul>
                    @Html.Pager(Model.PageSize, Model.PageIndex, Model.ProductCount, Model.Url)
                </ul>
            </div>
        }

        @if (!string.IsNullOrEmpty(Model.PlaceDescription))
        {
            <div class="row">
                <div class="container">
                    <div class="col-md-12">
                        <h2>Om @Model.PlaceDescTitle</h2>
                        @Html.Raw(Model.PlaceDescription)
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="col-md-4 search-rightcol">
        <div class="rc-row rc-filters">
            @Html.Partial("_SearchFilters_RC", Model)
        </div>
        <div class="rc-row">
            <h3>Hitta ditt drömhus</h3>
            <div class="r-box-countries">
                <ul>
                    @foreach (var c in Model.Countries)
                    {
                        <li>
                            <a class="r-country-link" href="@c.Url">@c.DisplayName</a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
    <div class="clear"></div>
</div>

@section scripts{
    
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBML9XUO8FpiHQShjmlL7QnIw7UkWheOQE&callback=initMap"></script>
@*<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBML9XUO8FpiHQShjmlL7QnIw7UkWheOQE&callback=initMap" type="text/javascript"></script>*@
<script type="text/javascript">
            var height;
            var markers = @Html.Raw(Model.MapObjects);
            window.onload = function () {
                var mapOptions = {
                    center: new google.maps.LatLng(markers[0].lat, markers[0].lng),
                    zoom: 8,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                };
                var infoWindow = new google.maps.InfoWindow();
                var map = new google.maps.Map(document.getElementById("dvMap"), mapOptions);
                for (i = 0; i < markers.length; i++) {
                    var data = markers[i]
                    var myLatlng = new google.maps.LatLng(data.lat, data.lng);
                    var marker = new google.maps.Marker({
                        position: myLatlng,
                        map: map,
                        title: data.title
                    });
                    (function (marker, data) {
                        google.maps.event.addListener(marker, "click", function (e) {
                            infoWindow.setContent(data.description);
                            infoWindow.open(map, marker);
                        });
                    })(marker, data);
                }

                if(!height)
                {
                    height = 270;
                }

                $('#dvMap').css('height', height);
            }
</script>

<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="~/Frame/scripts/search.js" type="text/javascript"></script>
@*<script src="https://mowido.blob.core.windows.net/scripts/search.1.0.5.min.js" type="text/javascript"></script>*@
    

}